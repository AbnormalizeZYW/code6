// 化零为整 : 动态规划时, 有时候方案数量很大, 有时候是指数级别, 那么这个时候就可以用同类的方案用一个集合来表示
//           所以每次就可以操作一个集合的元素, 将同类的方案化零为整组合成有一个集合来考虑
// 化整为零 : 
// 
// 集合: 因为只有看成一个集合才能落实的一堆东西上来进行加速
//
// f[i, j]: 表示长度为 i, 且不包含不吉利字符串, 末尾部分与不吉利的数字相同的长度是 j 的所有字符串集合a
// 状态转移方程: f[i + 1][k] = a[0][k] * f[i][0] + a[1][k] * f[i][1] + a[m - 1][k] * f[i][m - 1]
// 


// 发现 f[i] 和 f[i + 1] 的关系是线性的, 所以可以用向量来计算, f[i + 1] = f[i] * A 
// A 向量中 a[i][j] 表示在总长度相邻的两个串中, 将末尾部分与不吉利数字重复部分的长度从 i 变成 j, 这是一个定值, 可以预处理
// 通过 kmp 可以优化求 A 向量的过程
// 在代码中因为 f 数组是不断累乘的, 所以在做完快速幂之后 f 数组就是在乘完 An 后的结果
