1) 更新起点到其他边距离
2) 在更新过的边中选出最小的
3) 用选出的点继续更新
4) 循环 (2)~(3) 直到全部遍历完 


连线很多的时候, 对应的就是稠密图, 显然易见，稠密图的路径太多了, 所以就用点来找, 也就是抓重点
点很多, 但是连线不是很多的时候, 对应的就是稀疏图, 稀疏图的路径不多, 所以按照连接路径找最短路,
这个过程运用优先队列, 能确保每一次查找保留到更新到队列里的都是最小的, 同时还解决了两个点多条路选择最短路的问题

Dijstra 每次都贪当前最小的权重
bellmanFord 会暴力更新所有边
spfa 基于 bellmanFord 的优化, bellmanFord 会遍历所有边但是 spfa 是遍历当前能联通的边
     如果源点和终点没有联通, 那么终点也不会被更新到
     spfa 的 st数组可逆为了防止队列中有重复点, Dijkstra 的 st[] 不可逆记录已经确定的最小点

Dijstra 和 Prim 更新的都是自己连出去的, 因为只更新了自己连出去的
其他边都是正无穷